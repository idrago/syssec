services:
  cert-generator:
    image: alpine:latest
    volumes:
      - shared-certs:/shared/ssl
      - ./create-ca-certs.sh:/tmp/create-ca-certs.sh
      - ./certs:/host-certs
    working_dir: /
    command: >
      sh -c "
        apk add --no-cache openssl &&
        chmod +x /tmp/create-ca-certs.sh &&
        sh /tmp/create-ca-certs.sh /shared/ssl &&
        cp /shared/ssl/ca.crt /host-certs/ca.crt &&
        echo 'CA certificate available at ./certs/ca.crt - install this in your browser!' &&
        echo 'Certificate generation complete.'"
    container_name: cert-generator

  vulnerable-site:
    build:
      context: ./services/vulnerable-site
      dockerfile: Dockerfile
    ports:
      - "8001:443"
    volumes:
      - shared-certs:/etc/ssl/certs:ro
      - shared-certs:/etc/ssl/private:ro
    depends_on:
      cert-generator:
        condition: service_completed_successfully
    container_name: vulnerable-site
    restart: unless-stopped

  attacker-site:
    build:
      context: ./services/attacker-site
      dockerfile: Dockerfile
    ports:
      - "8002:443"
    environment:
      - NODE_ENV=development
      - PORT=443
    volumes:
      - ./logs:/app/logs
      - shared-certs:/app/ssl:ro
    depends_on:
      cert-generator:
        condition: service_completed_successfully
    container_name: attacker-site
    restart: unless-stopped

volumes:
  shared-certs: